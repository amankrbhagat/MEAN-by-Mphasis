Form State and Buttons:


Bootstrap 4 Form States:

Bootstrap 4 provides several utilities for handling form states. These include visual feedback for form controls, which help users understand the current state of the form and its fields.

1. Form States
Form states help indicate the validation state of form controls:

Default State: The default appearance of a form control.
Valid State: Used to indicate that a form control is valid.
Invalid State: Used to indicate that a form control has an error.

2. Valid and Invalid Feedback
Bootstrap provides classes for showing feedback based on the validation state of a form:

.is-valid: Applied to a form control to indicate that it is valid.
.is-invalid: Applied to a form control to indicate that it is invalid.

3. Feedback Messages
Feedback messages can be shown using the .valid-feedback and .invalid-feedback classes. These messages provide users with information about the validity of the form control.

Example: Bootstrap 4 Form States


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bootstrap 4 Form States</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <h2>Bootstrap 4 Form States Example</h2>
        <form>
            <div class="form-group">
                <label for="username">Username</label>
                <input type="text" class="form-control is-invalid" id="username" placeholder="Enter username">
                <div class="invalid-feedback">
                    Please provide a valid username.
                </div>
            </div>
            <div class="form-group">
                <label for="email">Email</label>
                <input type="email" class="form-control is-valid" id="email" placeholder="Enter email">
                <div class="valid-feedback">
                    Looks good!
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
    </div>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


Bootstrap 4 Buttons:

Bootstrap 4 provides a variety of button styles and states. Buttons can be styled with different colors and sizes, and they can also be disabled.

1. Button Styles
Bootstrap provides several button styles using classes:

.btn-primary: Primary button (e.g., blue).
.btn-secondary: Secondary button (e.g., gray).
.btn-success: Success button (e.g., green).
.btn-danger: Danger button (e.g., red).
.btn-warning: Warning button (e.g., yellow).
.btn-info: Info button (e.g., light blue).
.btn-light: Light button (e.g., white).
.btn-dark: Dark button (e.g., dark gray).

2. Button Sizes

Buttons can be sized with classes:

.btn-lg: Large button.
.btn-sm: Small button.

3. Disabled State

Buttons can be disabled using the .disabled class:

.btn-disabled: Used to indicate a disabled button.

Example: Bootstrap 4 Buttons


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bootstrap 4 Buttons</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <h2>Bootstrap 4 Buttons Example</h2>
        <button type="button" class="btn btn-primary">Primary Button</button>
        <button type="button" class="btn btn-secondary">Secondary Button</button>
        <button type="button" class="btn btn-success">Success Button</button>
        <button type="button" class="btn btn-danger">Danger Button</button>
        <button type="button" class="btn btn-warning">Warning Button</button>
        <button type="button" class="btn btn-info">Info Button</button>
        <button type="button" class="btn btn-light">Light Button</button>
        <button type="button" class="btn btn-dark">Dark Button</button>
        <button type="button" class="btn btn-primary btn-lg mt-3">Large Primary Button</button>
        <button type="button" class="btn btn-secondary btn-sm mt-2">Small Secondary Button</button>
        <button type="button" class="btn btn-secondary mt-3" disabled>Disabled Button</button>
    </div>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>

Basic Form States Example

Bootstrap 4 provides different form control states such as valid, invalid, disabled, and read-only for input fields. Here's how you can implement these states:

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Bootstrap 4 Form States</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
</head>
<body>
  <div class="container mt-5">
    <h3>Bootstrap 4 Form States</h3>

    <!-- Valid State -->
    <div class="form-group">
      <label for="validInput">Valid Input</label>
      <input type="text" class="form-control is-valid" id="validInput" value="Valid input">
      <div class="valid-feedback">
        Looks good!
      </div>
    </div>

    <!-- Invalid State -->
    <div class="form-group">
      <label for="invalidInput">Invalid Input</label>
      <input type="text" class="form-control is-invalid" id="invalidInput" value="Invalid input">
      <div class="invalid-feedback">
        Please provide a valid input.
      </div>
    </div>

    <!-- Disabled Input -->
    <div class="form-group">
      <label for="disabledInput">Disabled Input</label>
      <input type="text" class="form-control" id="disabledInput" value="Disabled input" disabled>
    </div>

    <!-- Read-Only Input -->
    <div class="form-group">
      <label for="readonlyInput">Read-Only Input</label>
      <input type="text" class="form-control" id="readonlyInput" value="Read-only input" readonly>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
</body>
</html>


 Bootstrap 4 Button States Example

Bootstrap 4 provides several button styles and states, including default, active, disabled, and loading states. Here's how you can implement these button states:


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Bootstrap 4 Button States</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
</head>
<body>
  <div class="container mt-5">
    <h3>Bootstrap 4 Button States</h3>

    <!-- Default Button -->
    <button type="button" class="btn btn-primary">Default Button</button>

    <!-- Active Button -->
    <button type="button" class="btn btn-success active" aria-pressed="true">Active Button</button>

    <!-- Disabled Button -->
    <button type="button" class="btn btn-danger" disabled>Disabled Button</button>

    <!-- Button with Loading Spinner -->
    <button class="btn btn-warning" type="button" disabled>
      <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
      Loading...
    </button>
  </div>

  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
</body>
</html>


Form with Button States

Combining both form controls and buttons in a form:

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Bootstrap 4 Form with Buttons</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
</head>
<body>
  <div class="container mt-5">
    <h3>Form with Button States</h3>
    <form>
      <div class="form-group">
        <label for="exampleInputEmail1">Email address</label>
        <input type="email" class="form-control" id="exampleInputEmail1" placeholder="Enter email">
      </div>

      <div class="form-group">
        <label for="exampleInputPassword1">Password</label>
        <input type="password" class="form-control" id="exampleInputPassword1" placeholder="Password">
      </div>

      <!-- Submit Button -->
      <button type="submit" class="btn btn-primary">Submit</button>

      <!-- Reset Button -->
      <button type="reset" class="btn btn-secondary">Reset</button>

      <!-- Disabled Submit Button -->
      <button type="button" class="btn btn-success" disabled>Disabled Submit</button>
    </form>
  </div>

  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
</body>
</html>


Key Points:

Form States: Use .is-valid and .is-invalid for form validation styling. Disabled and read-only inputs are supported using disabled and readonly attributes.
Button States: You can style buttons as active, disabled, and add a loading spinner for feedback using Bootstrap’s utility classes and spinner component.




Bootstrap Button Groups:

Bootstrap 4 provides a way to group buttons together using the btn-group class. This allows you to create a group of buttons that behave like a single button group, making it easier to control the layout and styling of related buttons.

Button Groups in Bootstrap 4
Basic Usage
To create a button group, you need to use the .btn-group class. You can then place multiple button elements inside this group.


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bootstrap 4 Button Group</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <div class="btn-group" role="group" aria-label="Button group example">
            <button type="button" class="btn btn-primary">Left</button>
            <button type="button" class="btn btn-primary">Middle</button>
            <button type="button" class="btn btn-primary">Right</button>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


In this example:

HTML Structure: The .btn-group class is applied to a div that wraps multiple button elements.
Button Classes: Each button inside the group has the .btn class for general button styling and .btn-primary for a specific color theme.

Button Toolbar

If you need to group buttons with other elements (like inputs or dropdowns) in a single row, you can use the .btn-toolbar class. It ensures that the button group and other elements are aligned properly.


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bootstrap 4 Button Toolbar</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <div class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">
            <div class="btn-group mr-2" role="group" aria-label="First group">
                <button type="button" class="btn btn-secondary">1</button>
                <button type="button" class="btn btn-secondary">2</button>
                <button type="button" class="btn btn-secondary">3</button>
            </div>
            <div class="btn-group mr-2" role="group" aria-label="Second group">
                <button type="button" class="btn btn-secondary">A</button>
                <button type="button" class="btn btn-secondary">B</button>
                <button type="button" class="btn btn-secondary">C</button>
            </div>
            <div class="btn-group" role="group" aria-label="Third group">
                <button type="button" class="btn btn-secondary">X</button>
                <button type="button" class="btn btn-secondary">Y</button>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


In this example:

Toolbar: The .btn-toolbar class is used to group button groups horizontally.
Button Groups: Inside the toolbar, you have multiple .btn-group elements with some spacing (mr-2 class) to separate them.

Button Group Sizes :

Bootstrap 4 allows you to adjust the size of button groups using sizing classes:

.btn-group-lg for large button groups
.btn-group-sm for small button groups

<div class="container mt-5">
    <div class="btn-group btn-group-lg" role="group" aria-label="Large button group">
        <button type="button" class="btn btn-success">Large 1</button>
        <button type="button" class="btn btn-success">Large 2</button>
    </div>
    <div class="btn-group btn-group-sm mt-2" role="group" aria-label="Small button group">
        <button type="button" class="btn btn-success">Small 1</button>
        <button type="button" class="btn btn-success">Small 2</button>
    </div>
</div>

Bootstrap Images and Utilities:

Bootstrap 4 provides various utilities for working with images, including responsive images, image alignment, and image replacement. Here’s a comprehensive overview:

1. Responsive Images
Bootstrap 4 includes a class called .img-fluid that makes images responsive. This class ensures that images scale with the parent element's width, preserving their aspect ratio.

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Bootstrap 4 Responsive Images</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
  <div class="container mt-5">
    <h1>Responsive Images</h1>
    <img src="https://via.placeholder.com/800x400" class="img-fluid" alt="Responsive Image">
  </div>
</body>
</html>


2. Image Alignment :

Bootstrap 4 provides utility classes for aligning images to the left, right, or center within a container.

Align Left: Use the .float-left class.
Align Right: Use the .float-right class.
Center Align: Use the .mx-auto d-block classes.


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Bootstrap 4 Image Alignment</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
  <div class="container mt-5">
    <h1>Image Alignment</h1>
    
    <h2>Float Left</h2>
    <img src="https://via.placeholder.com/200x200" class="float-left mr-3" alt="Left Aligned Image">
    
    <h2>Float Right</h2>
    <img src="https://via.placeholder.com/200x200" class="float-right ml-3" alt="Right Aligned Image">
    
    <h2>Center Align</h2>
    <img src="https://via.placeholder.com/200x200" class="mx-auto d-block" alt="Center Aligned Image">
  </div>
</body>
</html>


3. Image Replacement:

For accessibility, you can use .sr-only to hide images from the visual layout but keep them available for screen readers.


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Bootstrap 4 Image Replacement</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
  <div class="container mt-5">
    <h1>Image Replacement</h1>
    <img src="https://via.placeholder.com/800x400" class="img-fluid sr-only" alt="Visually Hidden Image">
    <p class="sr-only">This text is only readable by screen readers.</p>
  </div>
</body>
</html>


4. Image Aspect Ratios:

Bootstrap 4 does not provide direct classes for aspect ratios, but you can achieve this using the .aspect-ratio class for containers that hold images with specific aspect ratios.


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Bootstrap 4 Aspect Ratios</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <style>
    .aspect-ratio {
      padding-bottom: 56.25%; /* 16:9 Aspect Ratio */
      position: relative;
      height: 0;
    }
    .aspect-ratio img {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  </style>
</head>
<body>
  <div class="container mt-5">
    <h1>Aspect Ratios</h1>
    <div class="aspect-ratio">
      <img src="https://via.placeholder.com/800x450" alt="Aspect Ratio Image">
    </div>
  </div>
</body>
</html>


Utilities for Positioning and Responsiveness:


Bootstrap 4 provides a range of utility classes for positioning and responsiveness that make it easier to design and layout your web pages. These utilities help you control the placement of elements and ensure that your designs work well on different screen sizes. Let's break down the main utilities for positioning and responsiveness:


1. Position Utilities :

Bootstrap 4 includes classes for controlling the positioning of elements. The key classes are:

.position-static: The default position value. The element is positioned according to the normal document flow.
.position-relative: The element is positioned relative to its normal position. You can use this for positioning child elements absolutely within it.
.position-absolute: The element is positioned absolutely to its nearest positioned ancestor (i.e., an ancestor with a position of relative, absolute, or fixed).
.position-fixed: The element is positioned relative to the viewport, which means it stays in the same place even if the page is scrolled.
.position-sticky: The element is positioned based on the user's scroll position. It toggles between relative and fixed positioning depending on the scroll position.


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bootstrap 4 Positioning Utilities</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .box {
            width: 100px;
            height: 100px;
            background-color: lightcoral;
        }
        .box-relative {
            position: relative;
            background-color: lightblue;
            margin-top: 50px;
        }
        .box-absolute {
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: lightgreen;
        }
        .box-fixed {
            position: fixed;
            bottom: 10px;
            left: 10px;
            background-color: lightgoldenrodyellow;
        }
        .box-sticky {
            position: sticky;
            top: 10px;
            background-color: lightpink;
        }
    </style>
</head>
<body>

<div class="container mt-5">
    <div class="box position-static">Static</div>
    <div class="box box-relative">
        <div class="box box-absolute">Absolute</div>
        Relative
    </div>
    <div class="box box-fixed">Fixed</div>
    <div class="box box-sticky">Sticky</div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


2. Responsiveness Utilities

Bootstrap 4 includes classes for making your layout responsive. These classes help you control the visibility and alignment of elements based on screen size:

.d-none: Hides the element on all screen sizes.
.d-{breakpoint}-none: Hides the element on specific breakpoints (e.g., d-md-none hides the element on medium and larger screens).
.d-{breakpoint}-block: Displays the element as a block on specific breakpoints.
.d-{breakpoint}-inline: Displays the element as inline on specific breakpoints.
.d-{breakpoint}-inline-block: Displays the element as inline-block on specific breakpoints.


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bootstrap 4 Responsiveness Utilities</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .box {
            width: 100%;
            height: 100px;
            background-color: lightcoral;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>

<div class="container mt-5">
    <div class="box d-none d-sm-block">Visible on small screens and up</div>
    <div class="box d-sm-none">Visible only on extra small screens</div>
    <div class="box d-md-none">Visible on extra small and small screens</div>
    <div class="box d-lg-none">Visible on smaller screens (up to large)</div>
    <div class="box d-xl-none">Visible only on extra small, small, medium, and large screens</div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


Navigation by Tabs, Pills and with Dropdown:

1. Bootstrap 4 Navigation by Tabs :

Tabs are used for organizing content into different sections, which users can switch between.

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bootstrap Tabs</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>

<div class="container mt-5">
    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item">
            <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">Home</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="profile-tab" data-toggle="tab" href="#profile" role="tab" aria-controls="profile" aria-selected="false">Profile</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="contact-tab" data-toggle="tab" href="#contact" role="tab" aria-controls="contact" aria-selected="false">Contact</a>
        </li>
    </ul>
    <div class="tab-content" id="myTabContent">
        <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
            <h3>Home Tab</h3>
            <p>Content for the Home tab.</p>
        </div>
        <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
            <h3>Profile Tab</h3>
            <p>Content for the Profile tab.</p>
        </div>
        <div class="tab-pane fade" id="contact" role="tabpanel" aria-labelledby="contact-tab">
            <h3>Contact Tab</h3>
            <p>Content for the Contact tab.</p>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


Explanation:

nav nav-tabs creates a horizontal tab navigation.
data-toggle="tab" and data-target attributes are used to link the tabs to their content.
tab-content contains tab-pane elements, which are the content panels corresponding to each tab.
.fade and .show classes help with smooth transitions.


Examples:

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Bootstrap 4 Tabs Example</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <div class="container mt-5">
    <ul class="nav nav-tabs" id="myTab" role="tablist">
      <li class="nav-item">
        <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">Home</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" id="profile-tab" data-toggle="tab" href="#profile" role="tab" aria-controls="profile" aria-selected="false">Profile</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" id="contact-tab" data-toggle="tab" href="#contact" role="tab" aria-controls="contact" aria-selected="false">Contact</a>
      </li>
    </ul>
    <div class="tab-content" id="myTabContent">
      <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
        <p>This is Home content.</p>
      </div>
      <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
        <p>This is Profile content.</p>
      </div>
      <div class="tab-pane fade" id="contact" role="tabpanel" aria-labelledby="contact-tab">
        <p>This is Contact content.</p>
      </div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.0.7/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>



2. Bootstrap 4 Navigation by Pills :

Pills are similar to tabs but styled as pill-shaped buttons, typically used in a vertical layout.


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bootstrap Pills</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>

<div class="container mt-5">
    <ul class="nav nav-pills" id="pills-tab" role="tablist">
        <li class="nav-item">
            <a class="nav-link active" id="pills-home-tab" data-toggle="pill" href="#pills-home" role="tab" aria-controls="pills-home" aria-selected="true">Home</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="pills-profile-tab" data-toggle="pill" href="#pills-profile" role="tab" aria-controls="pills-profile" aria-selected="false">Profile</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="pills-contact-tab" data-toggle="pill" href="#pills-contact" role="tab" aria-controls="pills-contact" aria-selected="false">Contact</a>
        </li>
    </ul>
    <div class="tab-content mt-3" id="pills-tabContent">
        <div class="tab-pane fade show active" id="pills-home" role="tabpanel" aria-labelledby="pills-home-tab">
            <h3>Home Pill</h3>
            <p>Content for the Home pill.</p>
        </div>
        <div class="tab-pane fade" id="pills-profile" role="tabpanel" aria-labelledby="pills-profile-tab">
            <h3>Profile Pill</h3>
            <p>Content for the Profile pill.</p>
        </div>
        <div class="tab-pane fade" id="pills-contact" role="tabpanel" aria-labelledby="pills-contact-tab">
            <h3>Contact Pill</h3>
            <p>Content for the Contact pill.</p>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


Explanation:

nav nav-pills creates a vertical pill navigation.
data-toggle="pill" and href attributes link pills to their respective content.
tab-content and tab-pane work similarly to the Tabs component.

Example:

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Bootstrap 4 Pills Example</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <div class="container mt-5">
    <ul class="nav nav-pills" id="pills-tab" role="tablist">
      <li class="nav-item">
        <a class="nav-link active" id="pills-home-tab" data-toggle="pill" href="#pills-home" role="tab" aria-controls="pills-home" aria-selected="true">Home</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" id="pills-profile-tab" data-toggle="pill" href="#pills-profile" role="tab" aria-controls="pills-profile" aria-selected="false">Profile</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" id="pills-contact-tab" data-toggle="pill" href="#pills-contact" role="tab" aria-controls="pills-contact" aria-selected="false">Contact</a>
      </li>
    </ul>
    <div class="tab-content" id="pills-tabContent">
      <div class="tab-pane fade show active" id="pills-home" role="tabpanel" aria-labelledby="pills-home-tab">
        <p>This is Home content.</p>
      </div>
      <div class="tab-pane fade" id="pills-profile" role="tabpanel" aria-labelledby="pills-profile-tab">
        <p>This is Profile content.</p>
      </div>
      <div class="tab-pane fade" id="pills-contact" role="tabpanel" aria-labelledby="pills-contact-tab">
        <p>This is Contact content.</p>
      </div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.0.7/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>





3. Bootstrap 4 Navigation with Dropdown

Dropdowns can be added to navigation elements to provide additional options.


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bootstrap Dropdown</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>

<div class="container mt-5">
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <a class="navbar-brand" href="#">Navbar</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item active">
                    <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Dropdown
                    </a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                        <a class="dropdown-item" href="#">Action</a>
                        <a class="dropdown-item" href="#">Another action</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="#">Something else here</a>
                    </div>
                </li>
                <li class="nav-item">
                    <a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a>
                </li>
            </ul>
        </div>
    </nav>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


Explanation:

navbar provides a responsive navigation bar.
navbar-nav contains nav-item, which can include a dropdown for additional menu options.
dropdown-toggle and dropdown-menu manage the dropdown functionality.

Example:

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Bootstrap 4 Dropdown Example</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <div class="container mt-5">
    <ul class="nav nav-tabs">
      <li class="nav-item">
        <a class="nav-link active" href="#">Home</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="#">Profile</a>
      </li>
      <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Dropdown</a>
        <div class="dropdown-menu">
          <a class="dropdown-item" href="#">Action</a>
          <a class="dropdown-item" href="#">Another action</a>
          <a class="dropdown-item" href="#">Something else here</a>
        </div>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="#">Contact</a>
      </li>
    </ul>
  </div>

  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.0.7/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>



Navbar:

Bootstrap 4 Navbar Basics:

The Bootstrap 4 navbar is a flexible and responsive navigation header. It can contain links, brand logos, search forms, and more. Here’s a basic example of how to set up a Bootstrap 4 navbar:

Include Bootstrap 4 CSS and JS: First, ensure you include the Bootstrap 4 CSS and JS files in your HTML document. You can use the CDN for this purpose.

Create the Navbar HTML Structure: Use Bootstrap classes to structure the navbar.

Example of a Bootstrap 4 Navbar:


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bootstrap 4 Navbar Example</title>
    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>

    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <a class="navbar-brand" href="#">Brand</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item active">
                    <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Features</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Pricing</a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Dropdown
                    </a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                        <a class="dropdown-item" href="#">Action</a>
                        <a class="dropdown-item" href="#">Another action</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="#">Something else here</a>
                    </div>
                </li>
            </ul>
        </div>
    </nav>

    <!-- Bootstrap JS and dependencies -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


Breakdown of the Example

<nav class="navbar navbar-expand-lg navbar-light bg-light">: This is the main container for the navbar. The classes used here are:

navbar: Basic class for the navbar.
navbar-expand-lg: Makes the navbar responsive and allows it to expand on large screens.
navbar-light: Applies a light color scheme to the navbar.
bg-light: Sets the background color of the navbar to light.
<a class="navbar-brand" href="#">Brand</a>: The brand name or logo of your site. It’s a link that usually points to the home page.

<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav">: This button is used to toggle the visibility of the navbar contents on smaller screens. It contains a hamburger icon for the collapse feature.

<div class="collapse navbar-collapse" id="navbarNav">: This contains the collapsible part of the navbar. It’s hidden on small screens and visible on larger screens.

<ul class="navbar-nav">: This is the container for the navigation items. Each item in the list represents a link in the navbar.

<li class="nav-item">: Each list item represents a navigation link. The active class indicates the current page.

<a class="nav-link" href="#">: Each navigation link.

<li class="nav-item dropdown">: A dropdown menu within the navbar. The dropdown items are contained within a dropdown-menu class.

Examples:

Navbar with Dropdown:

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Navbar with Dropdown</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="#">Navbar</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavDropdown" aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNavDropdown">
      <ul class="navbar-nav">
        <li class="nav-item active">
          <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
        </li>
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Dropdown link
          </a>
          <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
            <a class="dropdown-item" href="#">Action</a>
            <a class="dropdown-item" href="#">Another action</a>
            <a class="dropdown-item" href="#">Something else here</a>
          </div>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Contact</a>
        </li>
      </ul>
    </div>
  </nav>

  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
</body>
</html>

Navbar with Form:

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Navbar with Form</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-light bg-light">
    <a class="navbar-brand" href="#">Navbar</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav">
        <li class="nav-item active">
          <a class="nav-link" href="#">Home</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">About</a>
        </li>
      </ul>
      <form class="form-inline ml-auto">
        <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
        <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
      </form>
    </div>
  </nav>

  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
</body>
</html>

Fixed Top Navbar:

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Fixed Top Navbar</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
    <a class="navbar-brand" href="#">Fixed Navbar</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav">
        <li class="nav-item active">
          <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Features</a>
        </li>
      </ul>
    </div>
  </nav>

  <div style="padding-top: 70px;">
    <h2>Fixed Navbar Example</h2>
    <p>The navbar will stay at the top of the page while scrolling.</p>
  </div>

  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
</body>
</html>


Sticky Bottom Navbar:

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sticky Bottom Navbar</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-bottom">
    <a class="navbar-brand" href="#">Sticky Bottom</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav">
        <li class="nav-item active">
          <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Contact</a>
        </li>
      </ul>
    </div>
  </nav>

  <div style="height: 1000px;">
    <h2>Sticky Bottom Example</h2>
    <p>Scroll down to see the navbar stick to the bottom.</p>
  </div>

  <script src="https://code.jquery.com/jquery-3.3



Breadcrumbs:

Bootstrap 4 Breadcrumbs:

Breadcrumbs are a navigation aid that allows users to keep track of their locations within programs, documents, or websites. In Bootstrap 4, breadcrumbs are implemented using the .breadcrumb class along with .breadcrumb-item for individual items.

Basic Structure:

<nav aria-label="breadcrumb">
  <ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="#">Home</a></li>
    <li class="breadcrumb-item"><a href="#">Library</a></li>
    <li class="breadcrumb-item active" aria-current="page">Data</li>
  </ol>
</nav>


Explanation
Container Element (<nav>):

The <nav> element with aria-label="breadcrumb" provides accessibility by defining the role of the breadcrumb navigation.
Ordered List (<ol>):

The <ol> element with the class .breadcrumb is used to create a breadcrumb list. Bootstrap styles this list to look like a breadcrumb trail.
Breadcrumb Items (<li>):

Each breadcrumb item is represented by a <li> element with the class .breadcrumb-item.
Active Item:

The last item in the breadcrumb trail, which represents the current page, should have the class .active and aria-current="page" to denote that it’s the active item and does not need a link.


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Bootstrap 4 Breadcrumbs Example</title>
  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>

<div class="container mt-4">
  <nav aria-label="breadcrumb">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="#">Home</a></li>
      <li class="breadcrumb-item"><a href="#">Library</a></li>
      <li class="breadcrumb-item active" aria-current="page">Data</li>
    </ol>
  </nav>
</div>

<!-- Bootstrap JS and dependencies (Popper.js and jQuery) -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.1/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

</body>
</html>


Customization:

Bootstrap 4 allows for some customization:

Separator: By default, Bootstrap uses a / as a separator between breadcrumb items. You can customize this with CSS if you want a different separator.


.breadcrumb-item + .breadcrumb-item::before {
  content: " > ";
}


Color and Style: You can style the breadcrumbs using custom CSS to match your design preferences.


.breadcrumb {
  background-color: #f8f9fa;
}

.breadcrumb-item a {
  color: #007bff;
}

.breadcrumb-item.active {
  color: #6c757d;
}


Pagination:

Bootstrap 4 provides a straightforward way to add pagination to your web pages. Pagination is useful when you have a lot of content spread across multiple pages, and you want users to navigate between these pages.

Basic Pagination in Bootstrap 4

Bootstrap 4 makes pagination easy with its built-in classes. Here's a step-by-step guide to using 
Bootstrap 4 for pagination:

HTML Structure for Pagination:

To create a basic pagination component, you use the .pagination class along with .page-item and .page-link classes for the pagination items. Here's an example of a simple pagination setup:


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bootstrap 4 Pagination Example</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>

<div class="container mt-5">
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            <li class="page-item">
                <a class="page-link" href="#" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            <li class="page-item"><a class="page-link" href="#">1</a></li>
            <li class="page-item"><a class="page-link" href="#">2</a></li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            <li class="page-item">
                <a class="page-link" href="#" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


Explanation of the Code
Container: The .container class is used to center and add some padding around your pagination component.
Navigation: The <nav> tag with aria-label helps with accessibility, defining the purpose of the navigation.
Pagination List: The <ul> tag with .pagination class creates a list of pagination items.
Pagination Items: Each <li> with the .page-item class represents an individual page. Inside it, the <a> tag with .page-link class creates clickable links.
Previous and Next: The aria-label attributes and &laquo; and &raquo; symbols are used for the previous and next page links, respectively.

Customizing Pagination

You can also add classes to customize the appearance:

Active Page: Add the .active class to the <li> element of the current page.


<li class="page-item active">
    <a class="page-link" href="#">2 <span class="sr-only">(current)</span></a>
</li>


Disabled State: Add the .disabled class to prevent interaction.

<li class="page-item disabled">
    <a class="page-link" href="#">...</a>
</li>

Alignment: Use .pagination-lg or .pagination-sm classes to adjust the size.

<ul class="pagination pagination-lg">
    <!-- Pagination Items -->
</ul>

<ul class="pagination pagination-sm">
    <!-- Pagination Items -->
</ul>


Pagination with Active and Disabled States


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Active and Disabled Pagination</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <div class="container mt-5">
    <nav>
      <ul class="pagination">
        <li class="page-item disabled"><a class="page-link" href="#">Previous</a></li>
        <li class="page-item"><a class="page-link" href="#">1</a></li>
        <li class="page-item active"><a class="page-link" href="#">2</a></li>
        <li class="page-item"><a class="page-link" href="#">3</a></li>
        <li class="page-item"><a class="page-link" href="#">Next</a></li>
      </ul>
    </nav>
  </div>
</body>
</html>


. Pagination with Icons

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Pagination with Icons</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <div class="container mt-5">
    <nav>
      <ul class="pagination">
        <li class="page-item">
          <a class="page-link" href="#" aria-label="Previous">
            <span aria-hidden="true">&laquo;</span>
          </a>
        </li>
        <li class="page-item"><a class="page-link" href="#">1</a></li>
        <li class="page-item"><a class="page-link" href="#">2</a></li>
        <li class="page-item"><a class="page-link" href="#">3</a></li>
        <li class="page-item">
          <a class="page-link" href="#" aria-label="Next">
            <span aria-hidden="true">&raquo;</span>
          </a>
        </li>
      </ul>
    </nav>
  </div>
</body>
</html>


4. Large Pagination

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Large Pagination</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <div class="container mt-5">
    <nav>
      <ul class="pagination pagination-lg">
        <li class="page-item"><a class="page-link" href="#">1</a></li>
        <li class="page-item"><a class="page-link" href="#">2</a></li>
        <li class="page-item"><a class="page-link" href="#">3</a></li>
      </ul>
    </nav>
  </div>
</body>
</html>


5. Small Pagination

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Small Pagination</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <div class="container mt-5">
    <nav>
      <ul class="pagination pagination-sm">
        <li class="page-item"><a class="page-link" href="#">1</a></li>
        <li class="page-item"><a class="page-link" href="#">2</a></li>
        <li class="page-item"><a class="page-link" href="#">3</a></li>
      </ul>
    </nav>
  </div>
</body>
</html>


6. Pagination with Ellipsis

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Pagination with Ellipsis</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <div class="container mt-5">
    <nav>
      <ul class="pagination">
        <li class="page-item"><a class="page-link" href="#">1</a></li>
        <li class="page-item"><a class="page-link" href="#">2</a></li>
        <li class="page-item"><a class="page-link" href="#">3</a></li>
        <li class="page-item disabled"><a class="page-link" href="#">...</a></li>
        <li class="page-item"><a class="page-link" href="#">8</a></li>
        <li class="page-item"><a class="page-link" href="#">9</a></li>
        <li class="page-item"><a class="page-link" href="#">10</a></li>
      </ul>
    </nav>
  </div>
</body>
</html>


7. Aligned Pagination (Centered and Right-Aligned)

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Centered Pagination</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <div class="container mt-5">
    <nav>
      <ul class="pagination justify-content-center">
        <li class="page-item"><a class="page-link" href="#">1</a></li>
        <li class="page-item"><a class="page-link" href="#">2</a></li>
        <li class="page-item"><a class="page-link" href="#">3</a></li>
      </ul>
    </nav>
  </div>
</body>
</html>


Right-Aligned Pagination:


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Right-Aligned Pagination</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
  <div class="container mt-5">
    <nav>
      <ul class="pagination justify-content-end">
        <li class="page-item"><a class="page-link" href="#">1</a></li>
        <li class="page-item"><a class="page-link" href="#">2</a></li>
        <li class="page-item"><a class="page-link" href="#">3</a></li>
      </ul>
    </nav>
  </div>
</body>
</html>




Carousel:


Bootstrap 4's Carousel is a flexible, responsive component that allows you to create a slideshow of items, such as images or text. It provides a built-in mechanism for navigating through multiple items, with options for automatic cycling, pause on hover, and indicators for the current slide.


Here's a step-by-step guide to creating a Bootstrap 4 Carousel with an example:

1. Set Up Your HTML Document
First, include the Bootstrap 4 CSS and JavaScript files in your HTML document. You can use a CDN (Content Delivery Network) for simplicity:

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bootstrap 4 Carousel Example</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <!-- Carousel HTML will go here -->

    <!-- Bootstrap and jQuery JS files -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


2. Add the Carousel HTML Structure

<div id="myCarousel" class="carousel slide" data-ride="carousel">
  <!-- Indicators -->
  <ol class="carousel-indicators">
    <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
    <li data-target="#myCarousel" data-slide-to="1"></li>
    <li data-target="#myCarousel" data-slide-to="2"></li>
  </ol>

  <!-- Wrapper for slides -->
  <div class="carousel-inner">
    <div class="carousel-item active">
      <img src="https://via.placeholder.com/800x400?text=Slide+1" class="d-block w-100" alt="Slide 1">
      <div class="carousel-caption d-none d-md-block">
        <h5>Slide 1</h5>
        <p>Some description for Slide 1.</p>
      </div>
    </div>
    <div class="carousel-item">
      <img src="https://via.placeholder.com/800x400?text=Slide+2" class="d-block w-100" alt="Slide 2">
      <div class="carousel-caption d-none d-md-block">
        <h5>Slide 2</h5>
        <p>Some description for Slide 2.</p>
      </div>
    </div>
    <div class="carousel-item">
      <img src="https://via.placeholder.com/800x400?text=Slide+3" class="d-block w-100" alt="Slide 3">
      <div class="carousel-caption d-none d-md-block">
        <h5>Slide 3</h5>
        <p>Some description for Slide 3.</p>
      </div>
    </div>
  </div>

  <!-- Left and right controls -->
  <a class="carousel-control-prev" href="#myCarousel" role="button" data-slide="prev">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="sr-only">Previous</span>
  </a>
  <a class="carousel-control-next" href="#myCarousel" role="button" data-slide="next">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="sr-only">Next</span>
  </a>
</div>


3. Explanation of the Components
Carousel Container: <div id="myCarousel" class="carousel slide" data-ride="carousel">

id="myCarousel": A unique identifier for the carousel.
class="carousel slide": Bootstrap classes to create the carousel effect.
data-ride="carousel": Automatically starts the carousel.
Indicators: <ol class="carousel-indicators">

List items representing each slide. The data-target attribute matches the carousel ID, and data-slide-to indicates the slide number. The class="active" indicates the currently active slide.
Slides: <div class="carousel-inner">

Contains multiple .carousel-item elements, each representing a single slide. The first slide should have the class="active".
Controls:

Left control: <a class="carousel-control-prev" href="#myCarousel" role="button" data-slide="prev">
Right control: <a class="carousel-control-next" href="#myCarousel" role="button" data-slide="next">
These allow users to navigate through the slides manually.

4. Customizing the Carousel

You can customize the carousel with additional options:

Automatic Cycling: By default, the carousel automatically cycles through slides. To disable this, remove the data-ride="carousel" attribute.

Pause on Hover: To pause the carousel on hover, you can use data-pause="hover".

<div id="myCarousel" class="carousel slide" data-ride="carousel" data-pause="hover">

Toast:

Bootstrap 4 Toast is a component used to display brief messages or notifications to the user. Toasts are often used for alerts or status updates that are non-intrusive and automatically disappear after a short period of time.

Here's a step-by-step explanation of Bootstrap 4 Toast, including an example:

Step 1: Include Bootstrap 4 :

To use Bootstrap 4 Toast, make sure you have included Bootstrap CSS and JavaScript in your HTML file. You can add these via a CDN or by downloading the files and linking them locally.


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bootstrap 4 Toast Example</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <!-- Your content here -->

    <!-- Bootstrap JS and dependencies -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


Step 2: Create a Toast Component

<div class="toast" data-autohide="true">
  <div class="toast-header">
    <strong class="mr-auto">Toast Title</strong>
    <small>11 mins ago</small>
    <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
      <span aria-hidden="true">&times;</span>
    </button>
  </div>
  <div class="toast-body">
    This is a toast message.
  </div>
</div>


Step 3: Display the Toast :

You need to use JavaScript to trigger the toast's display. Here's how you can do it:

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bootstrap 4 Toast Example</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>
    <div class="container mt-5">
        <button id="showToast" class="btn btn-primary">Show Toast</button>

        <div class="toast mt-3" id="myToast" data-autohide="true">
            <div class="toast-header">
                <strong class="mr-auto">Toast Title</strong>
                <small>11 mins ago</small>
                <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="toast-body">
                This is a toast message.
            </div>
        </div>
    </div>

    <!-- Bootstrap JS and dependencies -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        // Show the toast when the button is clicked
        document.getElementById('showToast').addEventListener('click', function() {
            var toast = document.getElementById('myToast');
            var toastInstance = new bootstrap.Toast(toast);
            toastInstance.show();
        });
    </script>
</body>
</html>


Explanation of the Toast Component:
.toast: This is the main container for the toast.
.toast-header: Contains the title, time, and close button of the toast.
.toast-body: Contains the main content of the toast message.
data-autohide="true": Specifies that the toast should automatically hide after a timeout. You can control this behavior using JavaScript if needed.

JavaScript to Control Toast

Bootstrap 4 uses JavaScript to control the behavior of toasts. In the example, when the button is clicked, JavaScript is used to create a new Toast instance and show it. The bootstrap.Toast class provides methods to show or hide toasts programmatically.


Panels:

In Bootstrap 4, the concept of panels has been replaced with cards. Panels were used in Bootstrap 3 to create bordered containers with a variety of content, but in Bootstrap 4, the card component is introduced as a more flexible and versatile option for creating similar layouts.

Bootstrap 4 Cards :

Cards in Bootstrap 4 are used to create flexible and extensible content containers with multiple variants and options. They can include headers, footers, images, text, and other elements. Cards are highly customizable and can be styled in various ways.

Basic Structure of a Bootstrap 4 Card

A basic card in Bootstrap 4 is structured as follows:


<div class="card" style="width: 18rem;">
  <img src="https://via.placeholder.com/150" class="card-img-top" alt="...">
  <div class="card-body">
    <h5 class="card-title">Card title</h5>
    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
    <a href="#" class="btn btn-primary">Go somewhere</a>
  </div>
</div>


Breakdown of the Card Structure:

Card Container (.card): The main container for the card content.

Card Image (.card-img-top): An optional image at the top of the card. You can also use .card-img-bottom for an image at the bottom, or .card-img-overlay for an overlay image.

Card Body (.card-body): A wrapper for the card content including the title, text, and buttons.

Card Title (.card-title): The title of the card.

Card Text (.card-text): The body text of the card.

Card Link/Button (.btn.btn-primary): An optional button or link to include in the card body.

Example:

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Bootstrap 4 Card Example</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>

<div class="container mt-5">
  <div class="card" style="width: 18rem;">
    <img src="https://via.placeholder.com/150" class="card-img-top" alt="Image">
    <div class="card-header">
      Featured
    </div>
    <div class="card-body">
      <h5 class="card-title">Special title treatment</h5>
      <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
      <a href="#" class="btn btn-primary">Go somewhere</a>
    </div>
    <div class="card-footer text-muted">
      2 days ago
    </div>
  </div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


Customization

Card Header: You can add a header to the card using the .card-header class.
Card Footer: Add a footer using the .card-footer class.
Card Overlay: Use .card-img-overlay for adding overlay content on top of images.

Labels:

Bootstrap 4 provides a simple way to add labels to your web pages using its built-in classes. Labels in Bootstrap are often used to indicate status, category, or other descriptive information. They can be styled in various ways to suit different needs.

Basics of Bootstrap 4 Labels

In Bootstrap 4, labels are typically used within form controls or to highlight text. They can be styled using a set of predefined classes.

1. Basic Usage
To create a basic label in Bootstrap 4, you use the .badge class. By default, badges are small and can be used to highlight or label items. Here's a basic example:

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bootstrap 4 Labels Example</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h1>Bootstrap 4 Labels Example</h1>
        
        <h3>Default Labels</h3>
        <span class="badge badge-primary">Primary</span>
        <span class="badge badge-secondary">Secondary</span>
        <span class="badge badge-success">Success</span>
        <span class="badge badge-danger">Danger</span>
        <span class="badge badge-warning">Warning</span>
        <span class="badge badge-info">Info</span>
        <span class="badge badge-light">Light</span>
        <span class="badge badge-dark">Dark</span>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


2. Styling and Variants :

Bootstrap provides several classes to style labels in different colors:

.badge-primary: Blue background
.badge-secondary: Gray background
.badge-success: Green background
.badge-danger: Red background
.badge-warning: Yellow background
.badge-info: Light blue background
.badge-light: White background
.badge-dark: Black background
You can add these classes to the <span> element to apply the corresponding styles.

3. Labels in Form Controls :

Labels are also commonly used in forms to provide descriptive text next to form controls. Bootstrap's .form-label class is used for this purpose.


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bootstrap 4 Form Labels</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h1>Bootstrap 4 Form Labels Example</h1>
        
        <form>
            <div class="form-group">
                <label for="name" class="form-label">Name</label>
                <input type="text" class="form-control" id="name" placeholder="Enter your name">
            </div>
            <div class="form-group">
                <label for="email" class="form-label">Email address</label>
                <input type="email" class="form-control" id="email" placeholder="Enter your email">
            </div>
            <div class="form-group">
                <label for="password" class="form-label">Password</label>
                <input type="password" class="form-control" id="password" placeholder="Enter your password">
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>


Key Points
Badges: Use .badge along with a contextual class like .badge-primary to display labeled text with background colors.
Form Labels: Use .form-label for descriptive text next to form controls.


